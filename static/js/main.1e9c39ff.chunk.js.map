{"version":3,"sources":["img/unnamed.jpg","components/movieItem.jsx","components/moviesWillWatch.jsx","utils/api.js","components/MovieTabs.jsx","components/App.jsx","index.js"],"names":["module","exports","MovieItem","state","willWatch","imgSource","this","props","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","backdrop_path","poster_path","img","Card","CardImg","top","src","alt","CardBody","CardTitle","title","CardText","className","vote_average","Button","color","onClick","bind","setState","Component","MoviesWillWatch","moviesWillWatch","titles","map","ListGroupItem","style","length","ListGroup","API_URL","API_KEY_3","MovieTabs","nextProps","nextState","sort_by","updateSortBy","handleClick","value","getClassLink","Row","ButtonGroup","outline","App","movies","page","pages","getMovies","fetch","then","response","json","result","results","total_pages","updateMovies","filter","item","id","updateMoviesWillWatch","listWillWatch","category","moveToPrewPage","console","log","moveToNextPage","prevProps","prevSate","Container","Col","sm","md","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e9c39ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/unnamed.c07009cf.jpg\";","import React, { Component } from 'react';\nimport { Button, Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\nimport img from '../img/unnamed.jpg';\n\nexport default class MovieItem extends Component {\n\n  state = {\n    willWatch: false\n  }\n  \n  render() {\n    const { movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props;\n    const { willWatch } = this.state;\n\n    let imgSource;\n    if (movie.backdrop_path || movie.poster_path) {\n      imgSource = `https://image.tmdb.org/t/p/w500${movie.backdrop_path || movie.poster_path}`;\n    } else {\n      imgSource = img;\n    }\n\n    return (\n      <Card>\n        <CardImg\n          top\n          src={imgSource}\n          alt=\"Card image cap\"\n        />\n        <CardBody>\n          <CardTitle>{movie.title}</CardTitle>\n          <CardText className=\"d-flex justify-content-between align-items-center\">\n            <p className=\"mb-0\">Rating: {movie.vote_average}</p>\n            <Button\n              color=\"outline-secondary\"\n              onClick={removeMovie.bind(this, movie)}\n            >\n              Delete movie\n            </Button>\n            {willWatch ? (\n              <Button\n                color=\"outline-danger\"\n                onClick={() => {\n                  this.setState({\n                    willWatch: false\n                  });\n                  removeMovieFromWillWatch(movie)\n                }}\n              >\n                Remove Will Watch\n              </Button>\n            ) : (\n              <Button\n                color= \"outline-warning\"\n                onClick={() => {\n                  this.setState({\n                    willWatch: true\n                  });\n                  addMovieToWillWatch(movie)\n                }}\n              >\n                Add Will Watch\n              </Button>\n            )}\n          </CardText>\n        </CardBody>\n      </Card>\n    );\n  }\n}","import React from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\n\nconst MoviesWillWatch = ({ moviesWillWatch }) => {\n\n  const titles = moviesWillWatch.map(movie => {\n    return (\n      <ListGroupItem>\n        <div className=\"d-flex justify-content-between\">\n          {movie.title} <span style={{ color: 'red' }}>{movie.vote_average}</span>\n        </div>\n      </ListGroupItem>\n    )\n  })\n\n  return (\n    <>\n      <h4>\n        Will Watch: {moviesWillWatch.length} {moviesWillWatch.length === 1 ? 'movie' : 'movies'}\n      </h4>\n      <ListGroup>\n        {titles}\n      </ListGroup>\n    </>\n  );\n}\n\n\nexport default MoviesWillWatch;","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","import React, { Component } from 'react';\nimport { Row, ButtonGroup, Button } from 'reactstrap';\n\nexport default class MovieTabs extends Component {\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps.sort_by !== this.props.sort_by) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    const { sort_by, updateSortBy } = this.props;\n\n    const handleClick = value => () => updateSortBy(value);\n    const getClassLink = value => sort_by === value ? false : true;\n\n    return (\n      <Row className=\"ml-3\">\n        <ButtonGroup className=\"mb-4\">\n          <Button\n            color=\"dark\"\n            outline={getClassLink('popularity.desc')}\n            onClick={handleClick('popularity.desc')}\n          >\n            Popularity desc\n            </Button>\n          <Button\n            color=\"dark\"\n            outline={getClassLink('revenue.desc')}\n            onClick={handleClick('revenue.desc')}\n          >\n            Revenue desc\n            </Button>\n          <Button\n            color=\"dark\"\n            outline={getClassLink('vote_average.desc')}\n            onClick={handleClick('vote_average.desc')}\n          >\n            Vote average desc\n            </Button>\n        </ButtonGroup>\n      </Row>\n    );\n  }\n  \n}","import React, { Component } from \"react\";\nimport MovieItem from \"./movieItem\";\nimport { Container, Row, Col, ButtonGroup, Button } from 'reactstrap';\nimport MoviesWillWatch from \"./moviesWillWatch\";\nimport { API_URL, API_KEY_3 } from '../utils/api';\nimport MovieTabs from \"./MovieTabs\";\n\n\nexport default class App extends Component {\n\n  state = {\n    movies: [],\n    moviesWillWatch: [],\n    sort_by: 'popularity.desc',\n    page: 1,\n    pages: ''\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(prevProps, prevSate) {\n    const { sort_by, page } = this.state;\n    \n    if (prevSate.sort_by !== sort_by ||\n      prevSate.page !== page) {\n      this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    const { sort_by, page } = this.state;\n    const type = '/discover/movie';\n\n    fetch(`${API_URL}${type}?api_key=${API_KEY_3}&sort_by=${sort_by}&page=${page}`)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          movies: result.results,\n          pages: result.total_pages\n        });\n      });\n  }\n\n  removeMovie = (movie) => {\n    const { movies, moviesWillWatch } = this.state;\n    const updateMovies = movies.filter(item => item.id !== movie.id);\n    const updateMoviesWillWatch = moviesWillWatch.filter(item => item.id !== movie.id);\n\n    this.setState({\n      movies: updateMovies,\n      moviesWillWatch: updateMoviesWillWatch\n    })\n  }\n\n  addMovieToWillWatch = movie => {\n    const { moviesWillWatch } = this.state;\n    let listWillWatch = [...moviesWillWatch, movie];\n\n    this.setState({\n      moviesWillWatch: listWillWatch\n    })\n  }\n\n  removeMovieFromWillWatch = movie => {\n    const { moviesWillWatch } = this.state;\n    const updateMoviesWillWatch = moviesWillWatch.filter(item => item.id !== movie.id);\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    })\n  }\n\n  updateSortBy = category => {\n    this.setState({\n      sort_by: category\n    })\n  }\n\n  moveToPrewPage = () => {\n    console.log('page: ', this.state.page);\n    if (this.state.page === 1) {\n      return;\n    } else {\n      this.setState({\n        page: this.state.page - 1\n      })\n    }\n  }\n\n  moveToNextPage = () => {\n    console.log('page: ', this.state.page);\n\n    this.setState({\n      page: this.state.page + 1\n    })\n  }\n\n  \n\n  render() {\n\n    const { movies, moviesWillWatch, sort_by, page, pages } = this.state;\n\n    return (\n      <Container className=\"mt-4\">\n        <Row>\n          <MovieTabs\n            sort_by={sort_by}\n            updateSortBy={this.updateSortBy}\n          />\n          <Col sm=\"9\">\n            <Row>\n              {movies.map(movie =>\n                <Col md=\"6\" className=\"mb-4\" key={movie.id}>\n                  <MovieItem\n                    movie={movie}\n                    removeMovie={this.removeMovie}\n                    addMovieToWillWatch={this.addMovieToWillWatch}\n                    removeMovieFromWillWatch={this.removeMovieFromWillWatch}\n                  />\n                </Col>\n              )}\n            </Row>\n          </Col>\n          <Col sm=\"3\">\n            <MoviesWillWatch moviesWillWatch={moviesWillWatch}/>\n          </Col>\n        </Row>\n        <Row className=\"ml-0\">\n          <ButtonGroup className=\"mb-4\">\n            <Button\n              color=\"dark\"\n              outline\n              onClick={this.moveToPrewPage}\n            >\n              Prev\n            </Button>\n            <Button\n              color=\"dark\"\n              outline\n              onClick={this.moveToNextPage}\n            >\n              Next\n            </Button>\n          </ButtonGroup>\n          <div className=\"ml-4\">Page Count: {page}/{pages}</div>\n        </Row>\n      </Container>\n    );\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}